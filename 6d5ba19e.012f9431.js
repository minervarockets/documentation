(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{114:function(e,a,o){"use strict";o.r(a),o.d(a,"frontMatter",(function(){return n})),o.d(a,"metadata",(function(){return c})),o.d(a,"toc",(function(){return m})),o.d(a,"default",(function(){return l}));var t=o(3),r=o(7),s=(o(0),o(181)),i=["components"],n={id:"git",title:"Usando o Git",sidebar_label:"Git"},c={unversionedId:"glossario/git",id:"glossario/git",isDocsHomePage:!1,title:"Usando o Git",description:"Escrito por Gabriel Aleksandravicius",source:"@site/docs/glossario/git.md",slug:"/glossario/git",permalink:"/documentation/docs/glossario/git",editUrl:"https://github.com/minervarockets/documentation/edit/master/my-website/docs/glossario/git.md",version:"current",sidebar_label:"Git",sidebar:"Docs",previous:{title:"UML e Diagrama de Classes",permalink:"/documentation/docs/glossario/diagramadeclasses"},next:{title:"M\xe1quina de Estados",permalink:"/documentation/docs/glossario/maquinadeestados"}},m=[{value:"O que \xe9",id:"o-que-\xe9",children:[]},{value:"Comandos principais",id:"comandos-principais",children:[]},{value:"Git Workflow",id:"git-workflow",children:[{value:"Branches Principais",id:"branches-principais",children:[]},{value:"Branches de Suporte",id:"branches-de-suporte",children:[]},{value:"Vis\xe3o Geral",id:"vis\xe3o-geral",children:[]}]},{value:"Uso no Aurora v2",id:"uso-no-aurora-v2",children:[]},{value:"Extens\xf5es VS Code",id:"extens\xf5es-vs-code",children:[]},{value:"Refer\xeancias",id:"refer\xeancias",children:[]}],d={toc:m};function l(e){var a=e.components,n=Object(r.a)(e,i);return Object(s.b)("wrapper",Object(t.a)({},d,n,{components:a,mdxType:"MDXLayout"}),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Escrito por Gabriel Aleksandravicius")),Object(s.b)("p",null,"Nessa p\xe1gina: "),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"\xc9 explicado resumidamente o que \xe9 o Git;"),Object(s.b)("li",{parentName:"ul"},"S\xe3o apresentados seus comandos principais;"),Object(s.b)("li",{parentName:"ul"},"\xc9 mostrado como \xe9 o fluxo de trabalho;"),Object(s.b)("li",{parentName:"ul"},"Vemos como utilizamos essa ferramenta na programa\xe7\xe3o do Aurora v2;"),Object(s.b)("li",{parentName:"ul"},"Indicamos algumas extens\xf5es para o VS Code.")),Object(s.b)("h2",{id:"o-que-\xe9"},"O que \xe9"),Object(s.b)("p",null,"Git \xe9 uma ferramenta utilizada no ",Object(s.b)("strong",{parentName:"p"},"controle de vers\xe3o")," ou ",Object(s.b)("strong",{parentName:"p"},"versionamento"),". O controle de vers\xe3o \xe9 um sistema que acompanha as mudan\xe7as feitas nos arquivos de modo que \xe9 poss\xedvel retornar a uma vers\xe3o antiga em algum momento no futuro. Ele te permite retornar a um estado anterior, comparar as mudan\xe7as feitas com o tempo, ver quem introduziu alguma mudan\xe7a que pode estar causando algum problema e mais. A vantagem de usar um Sistema de Controle de Vers\xe3o (VCS) \xe9 que mesmo que voc\xea apague acidentalmente algum  arquivo ou fa\xe7a alguma besteira enorme, essa situa\xe7\xe3o \xe9 facilmente revertida.  "),Object(s.b)("p",null,"Al\xe9m dessas vantagens, o Git permite que voc\xea trabalhe em conjunto com outros desenvolvedores. Ele trabalha como um Sistema de Controle de Vers\xe3o Distribu\xedda (DVCS), o que significa que cada um dos usu\xe1rios clona uma imagem do reposit\xf3rio e de seu hist\xf3rico. Portanto, se o servidor desse reposit\xf3rio morrer e o trabalho for perdido, qualquer um dos usu\xe1rios pode reverter a situa\xe7\xe3o. Al\xe9m disso, o DVCS permite que os reposit\xf3rios remotos dos diferentes usu\xe1rios trabalhem bem simultaneamente, garantindo diferentes din\xe2micas de trabalho. Veremos uma forma de se fazer isso mais \xe0 frente na se\xe7\xe3o ",Object(s.b)("em",{parentName:"p"},"Uso no Aurora v2"),"."),Object(s.b)("p",null,Object(s.b)("img",{alt:"img",src:o(295).default})),Object(s.b)("p",null,"Existe uma diferen\xe7a b\xe1sica na forma como o Git funciona em rela\xe7\xe3o a outros VCSs. Muitos desses outros sistemas armazenam informa\xe7\xe3o como uma lista de mudan\xe7as baseadas nos arquivos. Isso significa que eles armazenam a informa\xe7\xe3o como um grupo de arquivos e as mudan\xe7as feitas neles ao longo do tempo - e por isso esse mecanismo \xe9 chamado de ",Object(s.b)("em",{parentName:"p"},"delta-based version control"),". Por outro lado, no Git a informa\xe7\xe3o \xe9 pensada como uma s\xe9rie de fotos de determinados instantes do sistema. Cada vez que voc\xea faz um commit \xe9 tirada uma foto dos seus arquivos e armazenada uma refer\xeancia daquela foto. Se n\xe3o houve nenhuma mudan\xe7a o Git n\xe3o salva os mesmos arquivos de novo, mas sim um link para a vers\xe3o desses arquivos j\xe1 armazenada."),Object(s.b)("p",null,"Outras caracter\xedsticas do Git:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"A maioria das opera\xe7\xf5es depende apenas dos arquivos locais, portanto n\xe3o \xe9 necess\xe1rio acesso constante \xe0 internet."),Object(s.b)("li",{parentName:"ul"},"Como todo o hist\xf3rico fica dispon\xedvel localmente, a maioria das opera\xe7\xf5es \xe9 praticamente instant\xe2nea."),Object(s.b)("li",{parentName:"ul"},"Tudo no Git passa por um ",Object(s.b)("a",{parentName:"li",href:"https://pt.wikipedia.org/wiki/Soma_de_verifica%C3%A7%C3%A3o"},"checksum")," antes de ser armazenado no reposit\xf3rio e \xe9 ent\xe3o referenciado a partir desse checksum. Isso significa que \xe9 imposs\xedvel mudar o conte\xfado de algo sem que o Git saiba. ",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},"O Git usa o algoritmo de hash SHA-1, que \xe9 uma string de 40 caracteres composta por hexadecimais determinada pelo conte\xfado do arquivo ou do diret\xf3rio. Tudo do Git \xe9 armazenado no banco de dados pelo valor hash, n\xe3o pelo nome do arquivo."))),Object(s.b)("li",{parentName:"ul"},"O Git geralmente apenas adiciona dados ao banco de dados. Depois de feito um commit, \xe9 dif\xedcil que a informa\xe7\xe3o seja perdida. "),Object(s.b)("li",{parentName:"ul"},"Existem tr\xeas estados em que os arquivos do Git podem existir: ",Object(s.b)("strong",{parentName:"li"},"modified"),", ",Object(s.b)("strong",{parentName:"li"},"staged")," e ",Object(s.b)("strong",{parentName:"li"},"commited"),".",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},Object(s.b)("em",{parentName:"li"},"Modified:")," O arquivo foi modificado mas n\xe3o foi commitado ao banco de dados ainda. "),Object(s.b)("li",{parentName:"ul"},Object(s.b)("em",{parentName:"li"},"Staged:")," O arquivo modificado foi marcado na vers\xe3o atual para ser incorporado ao pr\xf3ximo commit."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("em",{parentName:"li"},"Commited:")," O arquivo foi armazenado no banco de dados local.")))),Object(s.b)("p",null,"Podemos ent\xe3o dividir um projeto Git em tr\xeas se\xe7\xf5es principais: ",Object(s.b)("strong",{parentName:"p"},"working tree")," (diret\xf3rio de trabalho), ",Object(s.b)("strong",{parentName:"p"},"staging area")," (\xe1rea de prepara\xe7\xe3o) e o ",Object(s.b)("strong",{parentName:"p"},"Git directory")," (diret\xf3rio Git)."),Object(s.b)("p",null,Object(s.b)("img",{alt:"img",src:o(296).default})),Object(s.b)("p",null,"A working tree, localizada no disco local, \xe9 onde os arquivos provenientes do banco de dados do diret\xf3rio do Git ficam dispon\xedveis pra que voc\xea trabalhe."),Object(s.b)("p",null,"A staging area \xe9 um arquivo contido no diret\xf3rio Git que armazena informa\xe7\xf5es sobre o que vai entrar no pr\xf3ximo commit. "),Object(s.b)("p",null,"O Git directory \xe9 onde o Git armazena os metadados e banco de dados do seu projeto. Essa \xe9 a parte principal do Git e \xe9 o que \xe9 copiado quando voc\xea clona um reposit\xf3rio."),Object(s.b)("p",null,"Em resumo, o trabalho com o Git ocorre da seguinte forma:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"Voc\xea modifica arquivos na working tree."),Object(s.b)("li",{parentName:"ol"},"Voc\xea prepara (stage) as mudan\xe7as que quer que fa\xe7am parte do pr\xf3ximo commit, transferindo elas pra staging area."),Object(s.b)("li",{parentName:"ol"},"Voc\xea commita os arquivos, o que pega eles na staging area e armazena uma foto deles no diret\xf3rio Git.")),Object(s.b)("h2",{id:"comandos-principais"},"Comandos principais"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"git init -> inicializa um diret\xf3rio como reposit\xf3rio Git"),Object(s.b)("li",{parentName:"ul"},"git clone ","[url]"," -> clona um reposit\xf3rio inteiro a partir do seu URL"),Object(s.b)("li",{parentName:"ul"},"git status -> mostra arquivos novos, arquivos modificados, arquivos marcados pra commit"),Object(s.b)("li",{parentName:"ul"},"git add ","[file]"," -> marca um arquivo pro pr\xf3ximo commit "),Object(s.b)("li",{parentName:"ul"},"git reset ","[file]"," -> remove o arquivo do pr\xf3ximo commit ao mesmo tempo em que mant\xe9m as mudan\xe7as"),Object(s.b)("li",{parentName:"ul"},'git commit -m "',"[message]",'" -> commita os arquivos marcados '),Object(s.b)("li",{parentName:"ul"},"git log -> mostra todos os commits da branch atual"),Object(s.b)("li",{parentName:"ul"},"git branch -> lista as branches; um * aparece do lado da branch atual"),Object(s.b)("li",{parentName:"ul"},"git branch ","[branch-name]"," -> cria uma nova branch no commit atual"),Object(s.b)("li",{parentName:"ul"},"git checkout -> troca pra outra branch"),Object(s.b)("li",{parentName:"ul"},"git merge ","[branch]"," -> d\xe1 merge (mescla) da branch marcada na branch atual"),Object(s.b)("li",{parentName:"ul"},"git push ","[alias][branch]"," -> armazena os commits feitos na branch no diret\xf3rio Git"),Object(s.b)("li",{parentName:"ul"},"git pull -> busca e d\xe1 merge com o projeto local quaisquer commits que existam no diret\xf3rio Git")),Object(s.b)("p",null,"Veja o cheat sheet completo ",Object(s.b)("a",{parentName:"p",href:"https://education.github.com/git-cheat-sheet-education.pdf"},"aqui"),"."),Object(s.b)("h2",{id:"git-workflow"},"Git Workflow"),Object(s.b)("p",null,"\xc9 poss\xedvel trabalhar apenas com uma \xfanica branch em projetos pessoais, por\xe9m nos projetos em que h\xe1 uma equipe por tr\xe1s do desenvolvimento \xe9 importante prestar aten\xe7\xe3o no que cada um dos desenvolvedores est\xe1 trabalhando e usar mecanismos que auxiliem na produtividade e evitem erros. Um m\xe9todo de se fazer isso \xe9 usando o Git Workflow."),Object(s.b)("p",null,"O Git Workflow define um modelo de ramifica\xe7\xe3o do projeto com base em seu ciclo de lan\xe7amento. S\xe3o atribu\xeddas fun\xe7\xf5es espec\xedficas para as diferentes ramifica\xe7\xf5es e definido quando interagir com elas. As ramifica\xe7\xf5es s\xe3o: ",Object(s.b)("strong",{parentName:"p"},"master"),", ",Object(s.b)("strong",{parentName:"p"},"develop"),", ",Object(s.b)("strong",{parentName:"p"},"feature"),", ",Object(s.b)("strong",{parentName:"p"},"release")," e ",Object(s.b)("strong",{parentName:"p"},"hotfix"),". Veremos sobre cada uma delas a seguir."),Object(s.b)("h3",{id:"branches-principais"},"Branches Principais"),Object(s.b)("p",null,"O reposit\xf3rio central (tamb\xe9m chamado de ",Object(s.b)("em",{parentName:"p"},"origin"),") possui duas branches de exist\xeancia infinita: ",Object(s.b)("strong",{parentName:"p"},"master")," e ",Object(s.b)("strong",{parentName:"p"},"develop"),". "),Object(s.b)("p",null,"Na branch master fica o c\xf3digo em estado aprovado para produ\xe7\xe3o (utilizado pelos usu\xe1rios). A branch develop \xe9 inicialmente um clone da branch master e serve como ramifica\xe7\xe3o para as branches de desenvolvimento. A develop tamb\xe9m \xe9 chamada de branch de integra\xe7\xe3o porque nela s\xe3o integradas todas as mudan\xe7as preparadas para o pr\xf3ximo release. Quando o c\xf3digo da develop atinge um ponto est\xe1vel e est\xe1 pronto para ser liberado, \xe9 feito um merge dessa branch na master. Por defini\xe7\xe3o, cada vez que esse merge \xe9 feito temos uma nova vers\xe3o do software em produ\xe7\xe3o."),Object(s.b)("p",null,Object(s.b)("img",{alt:"img",src:o(297).default})),Object(s.b)("h3",{id:"branches-de-suporte"},"Branches de Suporte"),Object(s.b)("p",null,"Al\xe9m das branches principais, o Git Worflow conta com algumas branches de suporte que permitem o desenvolvimento paralelo do time de devs, o acompanhamento das novas features e uma resolu\xe7\xe3o r\xe1pida de bugs que surgem na master. Essas branches t\xeam todas um tempo de vida limitado, pois s\xe3o deletadas depois de terem sido integradas nas branches principais. S\xe3o 3: ",Object(s.b)("strong",{parentName:"p"},"feature"),", ",Object(s.b)("strong",{parentName:"p"},"release")," e ",Object(s.b)("strong",{parentName:"p"},"hotfix"),". Cada uma possui um prop\xf3sito espec\xedfico, uma branch espec\xedfica da qual elas devem se originar e uma outra espec\xedfica para a qual elas far\xe3o o merge."),Object(s.b)("h4",{id:"feature-branches"},"Feature branches"),Object(s.b)("p",null,"As branchs de feature se originam a partir da develop e fazem o merge tamb\xe9m na develop. A conven\xe7\xe3o do nome \xe9 feature/","[nomedafeature]",".  "),Object(s.b)("p",null,"Essas branches s\xe3o usadas no desenvolvimento das features que incorporar\xe3o o projeto em releases futuras. A branch de feature existe enquanto essa feature estiver em desenvolvimento e, uma vez terminada, deve ser mergeada na develop."),Object(s.b)("p",null,Object(s.b)("img",{alt:"img",src:o(298).default})),Object(s.b)("h4",{id:"release-branches"},"Release branches"),Object(s.b)("p",null,"As branches de release se originam a partir da develop e fazem o merge na develop e na master. A conven\xe7\xe3o do nome \xe9 release/","[numerodaversao]","."),Object(s.b)("p",null,"A branche de release \xe9 usada como est\xe1gio final antes de integrar todos os novos releases na branch master. \xc9 nela em que s\xe3o feitos ajustes finais, como solu\xe7\xe3o de pequenos bugs. "),Object(s.b)("p",null,"Criamos uma branch de release quando a develop j\xe1 est\xe1 praticamente finalizada e o c\xf3digo est\xe1 pronto pra ser integrado \xe0 produ\xe7\xe3o. Todos os features necess\xe1rios para a pr\xf3xima release j\xe1 devem ter sido mergeados na develop antes de criar a branch de release."),Object(s.b)("p",null,"Depois das eventuais mudan\xe7as terem sido feitas na branch de release, ela deve ser mergeada na master (pois teremos uma nova vers\xe3o do software). Al\xe9m disso, tamb\xe9m deve ser mergeada na develop para que essa branch contenha todas as pequenas modifica\xe7\xf5es feitas na release."),Object(s.b)("p",null,Object(s.b)("img",{alt:"img",src:o(299).default})),Object(s.b)("h4",{id:"hotfix-branches"},"Hotfix branches"),Object(s.b)("p",null,"As branches de hotfix se originam a partir da master e fazem o merge na master e na develop. A conven\xe7\xe3o do nome \xe9 hotfix/","[nomedofix]","."),Object(s.b)("p",null,"As branches de hotfix surgem da necessidade de se resolver rapidamente algum problema inesperado da branch master."),Object(s.b)("p",null,Object(s.b)("img",{alt:"img",src:o(300).default})),Object(s.b)("h3",{id:"vis\xe3o-geral"},"Vis\xe3o Geral"),Object(s.b)("p",null,"A imagem abaixo re\xfane o fluxo de trabalho completo:"),Object(s.b)("p",null,Object(s.b)("img",{alt:"img",src:o(301).default})),Object(s.b)("h2",{id:"uso-no-aurora-v2"},"Uso no Aurora v2"),Object(s.b)("p",null,"O c\xf3digo necess\xe1rio na avi\xf4nica \xe9 extensivo e deve compreender todos os sensores e m\xf3dulos presentes no EPS e CDHS. Para isso, todos os membros se dedicam a alguma atividade e o Git Workflow \xe9 empregado. Temos branches de feature pra cada um dos m\xf3dulos presentes nas placas."),Object(s.b)("p",null,Object(s.b)("img",{alt:"img",src:o(302).default})),Object(s.b)("h2",{id:"extens\xf5es-vs-code"},"Extens\xf5es VS Code"),Object(s.b)("p",null,"O VS Code j\xe1 vem com todo o suporte necess\xe1rio pra uso do Git e integra\xe7\xe3o com o Github, por\xe9m algumas extens\xf5es podem ser instaladas para melhorar a experi\xeancia. As recomendadas s\xe3o:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Git Graph: mostra um gr\xe1fico do hist\xf3rico do reposit\xf3rio Git."),Object(s.b)("li",{parentName:"ul"},"GitLens: mostra diversos detalhes do Git nos arquivos. ")),Object(s.b)("h2",{id:"refer\xeancias"},"Refer\xeancias"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control"},"https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control"))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("a",{parentName:"p",href:"https://www.atlassian.com/br/git/tutorials/comparing-workflows/gitflow-workflow"},"https://www.atlassian.com/br/git/tutorials/comparing-workflows/gitflow-workflow"))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("a",{parentName:"p",href:"https://nvie.com/posts/a-successful-git-branching-model/"},"https://nvie.com/posts/a-successful-git-branching-model/"))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("a",{parentName:"p",href:"https://medium.com/trainingcenter/utilizando-o-fluxo-git-flow-e63d5e0d5e04"},"https://medium.com/trainingcenter/utilizando-o-fluxo-git-flow-e63d5e0d5e04")))))}l.isMDXComponent=!0},181:function(e,a,o){"use strict";o.d(a,"a",(function(){return l})),o.d(a,"b",(function(){return b}));var t=o(0),r=o.n(t);function s(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function i(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,t)}return o}function n(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?i(Object(o),!0).forEach((function(a){s(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function c(e,a){if(null==e)return{};var o,t,r=function(e,a){if(null==e)return{};var o,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)o=s[t],a.indexOf(o)>=0||(r[o]=e[o]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)o=s[t],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var m=r.a.createContext({}),d=function(e){var a=r.a.useContext(m),o=a;return e&&(o="function"==typeof e?e(a):n(n({},a),e)),o},l=function(e){var a=d(e.components);return r.a.createElement(m.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},p=r.a.forwardRef((function(e,a){var o=e.components,t=e.mdxType,s=e.originalType,i=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),l=d(o),p=t,b=l["".concat(i,".").concat(p)]||l[p]||u[p]||s;return o?r.a.createElement(b,n(n({ref:a},m),{},{components:o})):r.a.createElement(b,n({ref:a},m))}));function b(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var s=o.length,i=new Array(s);i[0]=p;var n={};for(var c in a)hasOwnProperty.call(a,c)&&(n[c]=a[c]);n.originalType=e,n.mdxType="string"==typeof e?e:t,i[1]=n;for(var m=2;m<s;m++)i[m]=o[m];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,o)}p.displayName="MDXCreateElement"},295:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/dvcs-f2b221dc3b44364b214917b763342bbe.png"},296:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/gitsections-da592a13e4a626ee1b93fda65ae8b5e0.png"},297:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/masterdevelop-d1eede3780b36350e8820892901cec8f.png"},298:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/feature-aa6764967911281f89cdff17b6e70288.png"},299:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/release-e5b41604385b9d1e6a2b84625f8cb884.png"},300:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/hotfix-2d70b1da091b3dd6e13606be566ff842.png"},301:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/fullworkflow-19b80883304fb1af3b138daccc32b639.png"},302:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/workflowrockets-f16cb300f469ce8b8e2d1a260571f61c.jpg"}}]);